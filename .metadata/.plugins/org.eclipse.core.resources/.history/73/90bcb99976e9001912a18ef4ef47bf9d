package br.com.sciensa.corujaoapi.controller;


import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import br.com.sciensa.corujaoapi.model.Genre;
import br.com.sciensa.corujaoapi.repository.GenreRepository;

@RestController
public class GenreController {

	@Autowired
	private GenreRepository repository;
	
    @RequestMapping(value = "/genres",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    public ResponseEntity<Genre> addGenre(@Valid @RequestBody Genre genre){
    	return null;
    };

    @RequestMapping(value = "/genres/{genreId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    public ResponseEntity<Genre> getGenre(@PathVariable("genreId") Long genreId){
    	return null;
    };

    @RequestMapping(value = "/genres",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    public ResponseEntity<Page<Genre>> listGenres(@Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page, @Valid @RequestParam(value = "size", required = false, defaultValue="10") Integer size, @Valid @RequestParam(value = "search", required = false) String search, Pageable pageable){
    	return null;
    };

    @RequestMapping(value = "/genres/{genreId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    public ResponseEntity<Genre> updateGenre(@PathVariable("genreId") Long genreId, @Valid @RequestBody Genre genre){
    	return null;
    };

}
